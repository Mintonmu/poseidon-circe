// 这个文件是 Circe 服务器应用程序框架的一部分。
// Copyleft 2017 - 2018, LH_Mouse. All wrongs reserved.

#include "precompiled.hpp"
#include "user_defined_functions.hpp"

namespace Circe {
namespace Auth {

// This function shall return an authentication token to the caller, which is used by the box server to identify the client.
// If an empty token is returned, the client will be sent the HTTP response specified here and consequently shut down.
std::string User_defined_functions::check_http_authentication(
	// Output parameters
	Poseidon::Http::Status_code &resp_status_code,  // This status code is sent to the client if an empty token is returned and ignored otherwise.
	Poseidon::Option_map &resp_headers,             // These HTTP headers are sent to the client if an empty token is returned and ignored otherwise.
	// Input parameters
	Poseidon::Uuid client_uuid,                     // This is the UUID of the client connection generated by the gate server.
	std::string client_ip,                          // This is the IP address of the client from the gate server's point of view.
	Poseidon::Http::Verb verb,                      // This is the verb sent by the client.
	std::string decoded_uri,                        // This is the request URI sent by the client. GET parameters have been stripped.
	Poseidon::Option_map params,                    // These are GET parameters sent by the client (as part of the URI).
	Poseidon::Option_map req_headers)               // These are HTTP headers sent by the client.
{
	PROFILE_ME;

	LOG_CIRCE_FATAL("TODO: Check HTTP authentication: ", Poseidon::Http::get_string_from_verb(verb), " ", decoded_uri, "\n", params);
	(void)resp_status_code;
	(void)resp_headers;
	(void)client_uuid;
	(void)client_ip;
	(void)verb;
	(void)decoded_uri;
	(void)params;
	(void)req_headers;
	return "HTTP_AUTH_TOKEN";
}

// This function shall return an authentication token to the caller, which is used by the box server to identify the client.
// If an empty token is returned, the client will be sent the Web_socket closure frame specified here and consequently shut down.
std::string User_defined_functions::check_websocket_authentication(
	// Output parameters
	boost::container::deque<std::pair<Poseidon::Web_socket::Op_code,
		Poseidon::Stream_buffer> > &resp_messages,         // These messages are sent to the client before anything else, including the closure frame should an empty token be returned.
	Poseidon::Web_socket::Status_code &resp_status_code,   // This status code is sent to the client if an empty token is returned and ignored otherwise.
	std::string &resp_reason,                              // This string is encapsulated in the closure frame if an empty token is returned and ignored otherwise.
	// Input parameters
	Poseidon::Uuid client_uuid,                            // This is the UUID of the client connection generated by the gate server.
	std::string client_ip,                                 // This is the IP address of the client from the gate server's point of view.
	std::string decoded_uri,                               // This is the request URI sent by the client. GET parameters have been stripped.
	Poseidon::Option_map params)                           // These are GET parameters sent by the client (as part of the URI).
{
	PROFILE_ME;

	LOG_CIRCE_FATAL("TODO: Check Web_socket authentication: ", decoded_uri, "\n", params);
	(void)resp_messages;
	(void)resp_status_code;
	(void)resp_reason;
	(void)client_uuid;
	(void)client_ip;
	(void)decoded_uri;
	(void)params;
	return "WEBSOCKET_AUTH_TOKEN";
}

}
}
